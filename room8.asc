//Bad
bool wanne_voll = false;
bool wanne_lila = false;

bool wasche_handtuch = false;
bool wasche_weiss = false;
bool wasche_rosa = false;
bool wasche_lila = false;
bool wasche_schwarz = false;


/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerBadezimmer].Init(oTuer01, hTuer01);
  oWasser.Clickable = false;
  
  StopMusic();
  if ( oWasser.Visible == 1 ) PlayAmbientSound (1, 95, 150, 51, 131);
  //else 
  PlayMusic(5);
  
 
}

function room_AfterFadeIn()
{

}

function room_Leave()
{
  StopMusic();
  PlayMusic(13);
}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBadezimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hWasserhahn_AnyClick()
{
  if (any_click_move(108, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
        oWasser.Visible = false;
				StopAmbientSound(1);
        //PlayMusic(5);
			}
			else
			{
				oWasser.Visible = true;
        //StopMusic();
				PlayAmbientSound (1, 95, 150, 51, 131);
			}
    }
		else if (UsedAction(eActOpen))
		{
      Wait(5);
			if ( oWasser.Visible )
			{
				player.Say("Das Wasser läuft bereits.");
			}
			else
      {
				oWasser.Visible = true;
        //StopMusic();
				PlayAmbientSound (1, 95, 150, 51, 131);
      }
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      if ( oWasser.Visible )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
        //PlayMusic(5);
      }
      else
			{
				player.Say("Der Wasserhahn ist doch schon zu.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
    else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
  if (any_click_move(108, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      player.Say("Ein Waschbecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);	
			player.Say("Es ist noch zu früh um mein Makeup abzuwaschen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);	
			player.Say("Dazu gibt es keinen Grund.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Fällt dir nichts besseres ein?");
		}
    else if (UsedAction(eActUseInventory))
		{
      Wait(5);
      if (any_click_use_inv(7, 108, 120, eDirectionUp) == 2){
       player.Say("Ein Spüllappen gehört in die Spüle!");
      }
      else if (any_click_use_inv(8, 108, 120, eDirectionUp) == 2){
       player.Say("Ein Spüllappen gehört in die Spüle!");
      }
      else{		
			player.Say("Damit würde ich das Waschbecken verstopfen.");
      }
		}
    else Unhandled();
	}
}

function hSpiegel_AnyClick()
{
	if (any_click_move(108, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Hmmm, da fehlt noch ein wenig Makeup. Aber sonst wie immer perfekt!");				
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist etwas zu groß für meinen Koffer.");			
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);			
			player.Say("Der ist abgeschlossen, leider.");
      player.Say("Mom hat immer Angst, dass ich ihr Makeup klaue.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Der ist fest an die Wand geschraubt.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iZahnbuersteKaputt)
		{
			Wait(5);
			player.Say("Hmm, ja...");
      player.Say("...ich könnte probieren, das damit aufzuhebeln.");
      player.Say("Moment...");
      Wait(20);
      PlaySound(72);
      oSpiegel.Visible = true;
      oLippenstift.Visible = true;
      oNagellack.Visible = true;
      Wait(10);
      player.Say("Hehe. Geht doch!");
      player.Say("Nur leider ist dadurch meine Zahnbürste zerbrochen.");
      Wait(5);
      player.LoseInventory(iZahnbuersteKaputt);
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iZahnbuerste)
		{
			Wait(5);
      player.Say("Lieber nicht.");
      player.Say("Sie könnte kaputt gehen, wenn ich den Spiegelschrank damit aufhebel.");
    }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iLippenstift)
		{
			Wait(5);
      player.Say("Der Lippenstift ist zu breit. Der passt nicht in die Ritze.");
    }
        else if (UsedAction(eActUseInventory) && (player.ActiveInventory == iSchluessel || player.ActiveInventory == iSchluessel2))
		{
			Wait(5);
      player.Say("Der Schlüssel passt nicht.");
    }
    else if (UsedAction(eActUseInventory) && (player.ActiveInventory == iLukenoeffner || player.ActiveInventory == iBowling))
		{
      Wait(5);
      player.Say("Ich möchte den Spiegelschrank nicht kaputt schlagen.");
    }
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich den Spiegelschrank nicht auf.");
		}
     
		else Unhandled();
	}
}

function hBadewanne_AnyClick()
{
	if (any_click_move(220, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine handelsübliche Badewanne.");	
      if(wanne_voll && !wanne_lila)
        player.Say("Bis zum Rand mit Wasser gefüllt.");
      if(wanne_lila)
        player.Say("Bis zum Rand mit lila Wasser gefüllt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Das schaffe ich nicht allein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe keine Zeit zum baden.");
			player.Say("Und alleine ist das sowieso langweilig.");		
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Fällt dir nichts besseres ein?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Das geht nicht zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Fällt dir nichts besseres ein?");
		}
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iFarbe)
    {
      Wait(5);
      if(wanne_voll)
      {
        PlaySound(4);
        player.LoseInventory(iFarbe);
        Wait(10);
        player.FaceDirection(eDirectionDown);
        player.Say("Schick.");
        player.Say("Ich hab jetzt lila Badewasser.");
        wanne_lila = true;
      }
      else player.Say("Ich möchte das nicht in die Wanne legen.");
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iKissen)
    {
      if(wanne_lila)
      {
      Wait(5);
      player.LoseInventory(iKissen);
      PlaySound(33);
      Wait(20);
      player.AddInventory(iKissenLila);
      PlaySound(4);
      Wait(5);
      player.Say("Ich habe das Kissen lila gefärbt.");
      }
      else if(wanne_voll)
        player.Say("Ich will das Kissen nicht nur nass machen.");
      else
        player.Say("Bernard soll in der Badewanne schlafen? Auch keine schlechte Idee...");
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iKissenLila)
    {
      player.Say("Ich habe das Kissen lila gefärbt.");
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iLappen)
    {
      Wait(5);
      player.Say("Ein Spüllappen gehört in die SPÜLE.");
    }
    else if(UsedAction(eActUseInventory) && (player.ActiveInventory == iBHrosa || player.ActiveInventory == iBHschwarz || player.ActiveInventory == iBHweiss || player.ActiveInventory == iHoseLila || player.ActiveInventory == iHoseSexy))
    {
      Wait(5);
      player.FaceDirection(eDirectionDown);
      player.Say("Ich soll meine Unterwäsche in der BADEWANNE waschen???");
    }
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (wanne_lila)
        player.Say("Ich möchte das nicht lila färben.");
      else if(wanne_voll)
        player.Say("Ich möchte das nicht in der Wanne waschen.");
      else  
        player.Say("Ich möchte das nicht in die Wanne legen.");
		}
		else Unhandled();
	}
}

function hMatte_AnyClick()
{
	if (any_click_move(180, 125, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);		
			player.Say("Eine Badezimmermatte.");				
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Ich brauche keine Badezimmermatte.");			
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);	
			player.Say("Jetzt nicht.");			
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);			
			player.Say("Die lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Die lässt sich nicht schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die bleibt da liegen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da liegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Jetzt nicht.");
		}
		else Unhandled();
	}
}

function hToilette_AnyClick()
{
	if (any_click_move(255, 135, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Kloschüssel.");				
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.FaceDirection(eDirectionDown);
			player.Say("Dazu wäre ich ganz gerne alleine!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
       if(oKlodeckel.Visible)
       {
			  player.Say("Der Deckel ist schon offen.");
       }
       else
       {
        aSound85.Play();
			  oKlodeckel.Visible = true;
        hToilette.Enabled = false;
       }
		}
		else if (UsedAction(eActClose))
		{
      if(oKlodeckel.Visible)
      {
        aSound5.Play();
        oKlodeckel.Visible = false;
      }
      else
      {
        Wait(5);	
        player.Say("Der Deckel ist schon zu.");
      }
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Das bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht das Klo herunterspülen.");
		}
		else Unhandled();
	}
}

function hKette_AnyClick()
{
	if (any_click_move(285, 125, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Die Klospülung.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Die ist am Spülkasten festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
      aSound38.Play();
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Ich sehe da kein Sinn drin.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
  if (any_click_move(285, 125, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Draussen ist auch nichts los.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory==iLukenoeffner)
		{
			Wait(5);
			player.Say("Der Lukenöffner passt nicht ins Fenster.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oKlodeckel_AnyClick()
{
  if (any_click_move(255, 135, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Igitt! Bernard hat mal wieder nicht die Bürste benutzt!");
      aSound5.Play();
			oKlodeckel.Visible = false;
      hToilette.Enabled = true;
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann man nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich muss nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Deckel ist bereits geöffnet.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			aSound5.Play();
			oKlodeckel.Visible = false;
      hToilette.Enabled = true;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist am Klo festgemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht das Klo herunterspülen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das mache ich nicht.");
		}
		else Unhandled();
	}
}

function hWaschmaschine_AnyClick()
{
  if (any_click_move(75, 121, eDirectionLeft))
	{
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActUse))
    {
      Wait(5);
      if(oWaschmachine.Visible == true)
        player.Say("Ich muss erst die Luke schließen.");
        
      else if(!wasche_handtuch && !wasche_weiss && !wasche_rosa && !wasche_lila && !wasche_schwarz)
      {
        player.Say("Die Maschine ist leer.");
      }
      else //waschen
      {
        if(wasche_handtuch && wasche_weiss)
        {
          wasche_weiss = false;
          wasche_rosa = true;
        }
        aWaschen.Play();
        Wait(100);
        player.Say("Fertig.");
      }
    }
    else if(UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Unsere neue Waschmaschine.");
      player.Say("Nun muss Mom nicht mehr alles mit der Hand waschen.");
    }
    else if(UsedAction(eActOpen))
    {
      Wait(5);
      if(oWaschmachine.Visible == true)
        {
          player.Say("Die ist schon offen.");
        }
      else
      {
        oWaschmachine.Visible = true;
        aSound85.Play();       
      }
    }
    else if(UsedAction(eActClose))
    {
      Wait(5);
      if(oWaschmachine.Visible == false)
        {
          player.Say("Die ist schon geschlossen.");
        }
      else
      {
        oWaschmachine.Visible = false;
        aSound5.Play();       
      }
    }
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Um Sachen damit zu waschen, muss man sie in die Luke tun.");
    }
    
    else Unhandled();
  }
}

function oZahnbuerste2_AnyClick()
{
  if (any_click_move(147, 72, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Meine lila Zahnbürste.");
    }
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Da ist ja meine Zahnbürste.");
      Wait(10);
      oZahnbuerste2.Visible = false;
      PlaySound(4);
      player.AddInventory(iZahnbuersteKaputt);
      Wait(20);
      player.Say("Hey, Moment...");
      player.Say("Die hat ja gar keine Borsten mehr!");
      player.Say("Anscheinend hat dieser kleine Eierkopf die abgeschnitten!");
      player.Say("Grrrrrr");
    }
        else if(UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Meine Zähne sind noch sauber genug.");
    }
    else Unhandled();
  }
}

function oZahnbuerste_AnyClick()
{
  if (any_click_move(143, 72, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Bernards blaue Zahnbürste.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Das ist zwar Bernards Zahnbürste, ich nehme die aber trotzdem mal mit.");
      Wait(10);
      oZahnbuerste.Visible = false;
      PlaySound(4);
      player.AddInventory(iZahnbuerste);
    }
    else if(UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Bestimmt nicht. Die hatte Bernard schon in seinem stinkenden Mund.");
    }
    else Unhandled();
  }
}

function hSpiegel_Talk()
{
     
    {
      Wait(5);
      player.Say("Spieglein, Spieglein, an der Wand. Ich bin einfach die schönste im ganzen Land.");
    }
}

function oSpiegel_AnyClick()
{
  if (any_click_move(108, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Der Spiegelschrank ist jetzt offen. Mal sehen was Mom hier so alles hat...");				
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist etwas zu groß für meinen Koffer.");			
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);			
			player.Say("Der ist schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Jetzt hab ich es endlich geschafft, ihn zu öffnen.");
      player.Say("Jetzt bleibt er auch offen!");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Der ist fest an die Wand geschraubt.");
		}    
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das möchte ich nicht in den Spiegelschrank legen.");
		}
     
		else Unhandled();
	}
}

function hWasserhahn2_AnyClick()
{
  if (any_click_move(195, 123, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit kann man Wasser in die Wanne lassen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
      if(!wanne_voll)
      {
				oWasser2.Visible = true;
        //StopMusic();
				PlayAmbientSound (1, 95, 150, 51, 131);
        Wait(250);  
        if(!oWasser.Visible){
          StopAmbientSound(1);
          //PlayMusic(5);
        } 
        oWasser2.Visible=false;
        Wait(5);
        player.Say("Die Wanne ist jetzt voll");
        Wait(5);
        player.FaceDirection(eDirectionDown);
        Wait(5);
        player.Say("Wow! Das ging ja schnell!");
        wanne_voll = true;
			}
      else
      {
        player.Say("Die Wanne ist bereits bis zum Rand mit Wasser gefüllt.");
      }
    }
		else if (UsedAction(eActClose))
		{		
				player.Say("Der Wasserhahn ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
    else Unhandled();
	}
}

function oWaschmachine_AnyClick()
{
       if (any_click_move(75, 121, eDirectionLeft))
	{
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Die Waschmaschine ist offen.");
    }
    else if(UsedAction(eActClose))
    {
      Wait(5);
        oWaschmachine.Visible = false;
        aSound5.Play();       
      
    }
    else if(UsedAction(eActOpen))
    {
       Wait(5);
       player.Say("Die ist schon offen.");
    }
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      if(wasche_handtuch || wasche_weiss || wasche_rosa || wasche_lila || wasche_schwarz)
      {
        PlaySound(4);
      }
      else
      {
        player.Say("Die Waschmaschine ist leer.");
      }
      
      if(wasche_handtuch)
      {
        player.AddInventory(iHandtuch);
        wasche_handtuch = false;
      }   
      if (wasche_weiss)
      {
        player.AddInventory(iBHweiss);
        wasche_weiss = false;
      }   
      if (wasche_rosa)
      {
        player.AddInventory(iBHrosa);
        wasche_rosa = false;
      }   
      if (wasche_lila)
      {
        player.AddInventory(iHoseLila);
        wasche_lila = false;
      }    
      if (wasche_schwarz)
      {
        player.AddInventory(iBHschwarz);
        wasche_schwarz = false;
      }
        
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iHandtuch)
    {
      Wait(5);
      player.LoseInventory(iHandtuch);
      PlaySound(4);
      wasche_handtuch = true;
    }
        else if(UsedAction(eActUseInventory) && player.ActiveInventory == iBHweiss)
    {
      Wait(5);
      player.LoseInventory(iBHweiss);
      PlaySound(4);
      wasche_weiss = true;
    }
        else if(UsedAction(eActUseInventory) && player.ActiveInventory == iBHrosa)
    {
      Wait(5);
      player.LoseInventory(iBHrosa);
      PlaySound(4);
      wasche_rosa = true;
    }
        else if(UsedAction(eActUseInventory) && player.ActiveInventory == iBHschwarz)
    {
      Wait(5);
      player.LoseInventory(iBHschwarz);
      PlaySound(4);
      wasche_schwarz = true;
    }
        else if(UsedAction(eActUseInventory) && player.ActiveInventory == iHoseLila)
    {
      Wait(5);
      player.LoseInventory(iHoseLila);
      PlaySound(4);
      wasche_lila = true;
    }
      else if(UsedAction(eActUseInventory) && (player.ActiveInventory == iHoseSexy || player.ActiveInventory == iKissen || player.ActiveInventory == iKissenLila))
    {
      Wait(5);
      player.Say("Nur Handwäsche. Sonst geht es kaputt.");
    }
    
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Das möchte ich nicht waschen.");
    }
    
    else Unhandled();
  }
}

function oLueftung_AnyClick()
{
  if (any_click_move(141, 111, eDirectionUp))
	{
    Wait(5);
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActLookAt))
    {
      
      player.Say("Damit wird das Bad belüftet ohne dass man das Fenster öffnen muss.");
      player.Say("Praktisch.");
    }
    else if(UsedAction(eActClose))
    {
     oLueftung.Visible = false;
     aSound67.Play(); 

    }
    else if(UsedAction(eActOpen))
    {
      player.Say("Das ist schon offen.");
    }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iBowling)
    {
      player.LoseInventory(iBowling);
      lueftung_offen = true;
      aBowling.Play();
     Wait(20);
     player.Say("Huch!");
    }
    else if(UsedAction(eActUseInventory))
    {
      player.Say("Ich möchte den Lüftungsschacht nicht mit Krams verstopfen.");
    }
    else Unhandled();
  }
}

function hLueftung_AnyClick()
{
    if (any_click_move(141, 111, eDirectionUp))
	{
    Wait(5);
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActLookAt))
    {     
      player.Say("Damit wird das Bad belüftet ohne dass man das Fenster öffnen muss.");
      player.Say("Praktisch.");
    }
    else if(UsedAction(eActOpen))
    {
     oLueftung.Visible = true;
     aSound67.Play(); 
    }
    else if(UsedAction(eActClose))
    {
      player.Say("Das ist schon zu.");
    }
    else if(UsedAction(eActUseInventory))
    {
      player.Say("Damit bekomme ich das Gitter nicht auf.");
    }
    else Unhandled();
  }
}

function oLippenstift_AnyClick()
{
  if (any_click_move(131, 53, eDirectionUp))
	{
    
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Lieber nicht.");
      if(iLippenstift.Graphic == 655)
        player.Say("Mom würde bemerken dass ihr Lippenstift fehlt und ich bekomme wieder Dateverbot.");
    }
    else if(UsedAction(eActLookAt))
    {   
      Wait(5);
      player.Say("Das ist Moms Lippenstift.");
    }
    else if(UsedAction(eActOpen))
    {
     Wait(5);
     player.Say("Den kann ich nicht öffnen, so lange er im Schrank steht.");
     }
    else if(UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Der ist schon zu.");
    }
    else if(UsedAction(eActUseInventory) && player.ActiveInventory == iLippenstift)
    {
      Wait(5);
      if(iLippenstift.Graphic == 654)
      {
        player.Say("Nochmal tausche ich den nicht aus.");
        player.Say("Dann hab ich ja wieder den leeren.");
      }
      else
      {
        PlaySound(4);
        iLippenstift.Graphic = 654;
        Wait(10);
        player.Say("Mom, ich glaube dein Lippenstift ist alle...");
        player.Say("Hehe.");
      }
    }
    else if(UsedAction(eActUseInventory))
    {
      player.Say("Ich kann das nicht mit dem Lippenstift benutzen.");
    }
    else Unhandled();
  }
}

function oNagellack_AnyClick()
{
  if (any_click_move(115, 53, eDirectionUp))
	{
    
    if(UsedAction(eActWalkTo))
    {
    }
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      PlaySound(4);
      player.AddInventory(iNagellack);
      oNagellack.Visible = false;
    }
    else if(UsedAction(eActLookAt))
    {   
      Wait(5);
      player.Say("Das ist Moms Nagellackentferner.");
    }
    else if(UsedAction(eActOpen))
    {
     Wait(5);
     player.Say("Den kann ich nicht öffnen, so lange er im Schrank steht.");
     }
    else if(UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Der ist schon zu.");
    }    
    else if(UsedAction(eActUseInventory))
    {
      player.Say("Ich sollte ihn erst einmal mitnehmen.");
    }
    else Unhandled();
  }
}
