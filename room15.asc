//Küche
bool jogurt_da = true;
bool slip_da = true;
bool mixer_da = true;
bool hose_da = false;
bool hose_heiss = false;

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerKueche].Init(oTuer01, hTuer01);
  oWasser.SetView(58);
	oWasser.Animate(0, 0, eRepeat, eNoBlock);
  oWasser.Clickable=false;
  if ( oWasser.Visible == 1 ) {
    PlayAmbientSound (1, 95, 150, 51, 131);
    if(!player.HasInventory(iLappen)){
          lappen_nass = true;
        }
  }
  
  StopMusic();
  PlayMusic(14);
}

function room_AfterFadeIn()
{

}

function room_Leave()
{
  StopMusic();
  PlayMusic(13);
}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerKueche].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hSchrank01_AnyClick()
{
  if (any_click_move(70, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oSchrank.Visible = true;
      oBio.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
      oSchrank.Visible = true;
      oBio.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function hMikrowelle_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Die ist fest auf die Arbeitsplatte geschraubt.");
		}
    else if (UsedAction(eActUse))
    {
      Wait(5);
      aMicro.Play();
      Wait(150);
      player.Say("Fertig.");
      if(hose_da)
        iHoseSexy.Graphic = 715;
        Wait(50);
    }
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			aSound85.Play();
			oMikrowelle.Visible = true;
      if(hose_da)
        oSexy.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Die Mikrowelle ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist fest auf die Arbeitsplatte geschraubt.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht sie nicht auf.");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
  if (any_click_move(250, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Den packe ich nicht ein.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			aSound85.Play();
			oKuehlschrank.Visible = true;
      hKuehlschrank.Enabled = false;
      if(jogurt_da)
        oJogurt.Visible = true;
      if(slip_da)
        oSlip.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Kühlschrank ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Wenn der bewegt werden soll, lasse ich lieber Bernard dafür schuften.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
		else Unhandled();
	}
}

function hHaengeschrank_AnyClick()
{
  if (any_click_move(75, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oHaengeschrank.Visible = true;
      oMixer.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function hHerd_AnyClick()
{
  if (any_click_move(150, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Herd.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist hier festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Der ist hier nur zur Dekoration.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Ofen ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Der Herd ist nur zur Dekoration.");
      player.Say("Da kann man nichts rein tun.");
		}
		else Unhandled();
	}
}

function hGeschirrspueler_AnyClick()
{
  if (any_click_move(100, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Unser Geschirrspüler.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist hier festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Ich werde nicht spülen.");
      player.Say("Dafür ist Mom zuständig.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Geschirrspüler ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich möchte das nicht spülen.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
  if (any_click_move(60, 135, eDirectionLeft))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann unseren Garten sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
      oFenster.Visible = true;
      oAst.Visible = true;
      PlaySound(85);
      Wait(20);
      //PlaySound(96);
      //aTraffic.Play();
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory==iLukenoeffner)
		{
			Wait(5);
			player.Say("Der Lukenöffner passt nicht ins Fenster.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hSchublade_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oSchublade.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
      oSchublade.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte die Schublade erst mal öffnen.");
		}
		else Unhandled();
  }
}

function hWaschbecken_AnyClick()
{
  if (any_click_move(50, 140, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      player.Say("Eine Spüle.");
      
      if(!player.HasInventory(iLappen) && !player.HasInventory(iLappenNass))
      {
      Wait(5);
      player.Say("Da ist ein Lappen drin. Den nehm ich mal mit.");
			aSound4.Play();
      Wait(5);
      if(lappen_nass == false){     
        player.AddInventory(iLappen);
      }
      else
        player.AddInventory(iLappenNass);
      }
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);	
			player.Say("Ich muss mir jetzt nicht die Hände waschen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);	
			player.Say("Dazu gibt es keinen Grund.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Das macht mal so überhaupt gar keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Fällt dir nichts besseres ein?");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
     if (any_click_use_inv(7, 50, 140, eDirectionLeft) == 2){
       aSound4.Play();
        Wait(5);
        player.LoseInventory(iLappen);
        if(oWasser.Visible == true && !player.HasInventory(iLappen))
        {
          lappen_nass = true;
        }
      }
      else if (any_click_use_inv(8, 50, 140, eDirectionLeft) == 2){
        aSound4.Play();
        Wait(5);
        player.LoseInventory(iLappenNass);
      }
      else
			player.Say("Damit würde ich die Spüle verstopfen.");
		}
    else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
  if (any_click_move(50, 140, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
        oWasser.Visible = false;
				StopAmbientSound(1);
			}
			else
			{
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 131);
        
        if(!player.HasInventory(iLappen)){
          lappen_nass = true;
        }
			}
    }
		else if (UsedAction(eActOpen))
		{
      Wait(5);
			if ( oWasser.Visible )
			{
				player.Say("Das Wasser läuft bereits.");
			}
			else
      {
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 131);
        if(!player.HasInventory(iLappen)){
          lappen_nass = true;
        }
      }
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      if ( oWasser.Visible )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
      }
      else
			{
				player.Say("Der Wasserhahn ist doch schon zu.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
    else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
***********************/

function oKuehlschrank_AnyClick()
{
  if (any_click_move(250, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Ein Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);		
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das habe ich schon getan.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose))
		{
			Wait(5);
			aSound5.Play();
			oKuehlschrank.Visible = false;
      hKuehlschrank.Enabled = true;
      oJogurt.Visible = false;
      oSlip.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);		
			player.Say("Den kann ich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das muss nicht gekühlt werden.");
		}
		else Unhandled();
	}
}

function oSchublade_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchublade.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchublade.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oMikrowelle_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Ein Mikrowelle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);		
			player.Say("Die ist fest auf die Arbeitsplatte geschraubt.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ist doch schon offen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose))
		{
			Wait(5);
			aSound5.Play();
			oMikrowelle.Visible = false;
      oSexy.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);		
			player.Say("Die ist fest auf die Arbeitsplatte geschraubt.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iHoseSexy)
		{
			Wait(5);
			player.LoseInventory(iHoseSexy);
      oSexy.Visible = true;
      hose_da = true;
      
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iZahnbuerste)
		{
			Wait(5);
      player.Say("Das würde die Zahnbürste schon gut desinfizieren.");
      player.Say("Aber das Plastik könnte schmelzen.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iBatterie)
		{
			Wait(5);
      player.Say("Das hat Bernard schon einmal getan.");
      player.Say("Und damit die halbe Küche in die Luft gesprengt.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iGlasVoll)
		{
			Wait(5);
      player.Say("Igitt! Ich mag kein aufgewärmtes Fruchtmus!");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iFrucht)
		{
			Wait(5);
      player.Say("Igitt! Ich mag keine aufgewärmte Früchte!");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das sollte ich da nicht rein tun.");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
  if (any_click_move(70, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Der ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchrank.Visible = false;
      oBio.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function oHaengeschrank_AnyClick()
{
  if (any_click_move(75, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Der ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oHaengeschrank.Visible = false;
      if(mixer_da)
        oMixer.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das möchte ich nicht in den Schrank legen.");
		}
		else Unhandled();
  }
}

function hHaengeschrank3_AnyClick()
{
  if (any_click_move(108, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Den mittleren Schrank kann man nicht öffnen.");
      player.Say("Warum auch immer.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");	
    }
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function hHaengeschrank2_AnyClick()
{
  if (any_click_move(138, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oHaengeschrank2.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Der bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function oHaengeschrank2_AnyClick()
{
  if (any_click_move(138, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Der ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oHaengeschrank2.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das möchte ich nicht in den Schrank legen.");
		}
		else Unhandled();
  }
}

function hEinkauf_AnyClick()
{
  if (any_click_move(261, 130, eDirectionUp))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Einkaufsliste.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wozu soll ich etwas einkaufen?");
      player.Say("Der Kühlschrank füllt sich immer von alleine wenn Mom und Dad da sind.");
		}
		
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht auf.");
		}
    		else if (UsedAction(eActClose))
		{
      player.Say("Wie um alles in der Welt soll ich einen Zettel schließen?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush) || UsedAction(eActUseInventory))
		{
      Wait(5);
      player.Say("Das bringt nix.");
		}
    else Unhandled();
  }
}

function oFenster_AnyClick()
{
  if (any_click_move(60, 135, eDirectionLeft))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann unseren Garten sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Lieber nicht. Hier muss dringend gelüftet werden.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Lieber nicht. Hier muss dringend gelüftet werden.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht aus dem Fenster schmeißen.");
		}
		else Unhandled();
  }
}

function oAst_AnyClick()
{
  if (any_click_move(60, 135, eDirectionLeft))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ragt ein Ast zum Fenster herein.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keinen dummen Ast.");
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);
			player.Say("Wie soll ich das benutzen?");
		}	
		else if (UsedAction(eActPull))
		{
			Wait(5);
      PlaySound(84);
      oAst2.Visible = true;
      oAst.Visible = false;
      oFrucht.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich drück da gar nichts!");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein lieber nicht.");
		}
		else Unhandled();
  }
}

function oAst2_AnyClick()
{
  if (any_click_move(60, 135, eDirectionLeft))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ragt ein Ast zum Fenster herein.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keinen dummen Ast.");
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);
			player.Say("Wie soll ich das benutzen?");
		}	
		else if (UsedAction(eActPull))
		{
      Wait(5);
			player.Say("Weiter kann ich daran nicht ziehen. Er hängt fest.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich drück da gar nichts!");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein lieber nicht.");
		}
		else Unhandled();
  }
}

function oFrucht_AnyClick()
{
  if (any_click_move(60, 135, eDirectionLeft))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("An dem Ast hängt irgend eine rote Frucht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.AddInventory(iFrucht);
      oFrucht.Visible = false;
      PlaySound(4);
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);
			player.Say("Ich ess das nicht - ich bin auf Diät!");
		}	
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{     
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein lieber nicht.");
		}
		else Unhandled();
  }
}

function oBio_AnyClick()
{
  if (any_click_move(80, 130, eDirectionLeft))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      player.Say("Igitt!");
			player.Say("Da sind noch verfaulte Erdbeeren drin.");
		}
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      player.FaceDirection(eDirectionDown);
      player.Say("Hast du sie noch alle?!");
      player.Say("Ich fasse bestimmt nicht in diesen stinkenden Biomüll!");
    }
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Das will ich nicht in den Biomüll werfen!");
    }
    else Unhandled();
  }
}

function oJogurt_AnyClick()
{
   if(any_click_move(237, 80, eDirectionUp))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Bio Diät-Jogurt'");
      player.Say("'Nur 0,0000000001% Fett'");
		}
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Das gibts doch nicht!");
      player.Say("Da hat schon wieder jemand meinen ganzen Diät-Jogurt aufgegessen!");
      Wait(10);
      PlaySound(4);
      oJogurt.Visible = false;
      jogurt_da = false;
      player.AddInventory(iGlas);     
    }
    else Unhandled();
  }
}

function oSlip_AnyClick()
{
  if(any_click_move(257, 100, eDirectionUp))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Was ist das denn?");
		}
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Was zur Hölle macht denn ein ...");
      Wait(10);
      player.Say("Hey, das ist ja mein Lieblingstanga!");
      Wait(5);
      PlaySound(4);
      oSlip.Visible = false;
      slip_da = false;
      player.AddInventory(iHoseLila);     
    }
    else Unhandled();
  }
}

function oMixer_AnyClick()
{
  Direction dir;
  if(mixer_da)
    dir = eDirectionUp;
  else
    dir = eDirectionLeft;
  
  if(any_click_move(75, 130, dir))
  {
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Moms Turbomixer.");
      player.Say("Der häckselt alles klein.");
		}
    else if (UsedAction(eActPickUp) && oMixer.Graphic == 817)
    {
      Wait(5); 
      aSound4.Play();
      oMixer.Graphic = 632;
      if(player.HasInventory(iPolster))
      {
        iPolster.Graphic = 818;
        player.Say("Yeah! Noch mehr Polster.");
      }
      else
      {
        player.AddInventory(iPolster);
        Wait(5);
        player.Say("Irre! So fühlt sich also gehäckseltes Sitzpolster an.");
      }
      

    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      if(mixer_da)
      {
        player.Say("Der ist mir zu sperrig zum herumschleppen.");
        player.Say("Ich stelle ihn mal hier ab.");
        Wait(10);
        oMixer.SetPosition(45, 86);
        PlaySound(50);
        mixer_da = false;
      }
      else
        player.Say("Der steht da schon ganz gut.");    
    }
    else if(UsedAction(eActUse) && oMixer.Graphic == 632)
    {
      Wait(5);
      aMixer.Play();
      Wait(50);
      player.Say("Er funktioniert.");
    }
    else if(UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Da ist schon was Gemixtes drin.");
    }
    else if ( UsedAction(eActUseInventory) && mixer_da )
      {
        Wait(5);
        player.Say("Ich komme nicht an die Öffnung. Der Mixer steht zu weit oben.");
      }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iFrucht && oMixer.Graphic == 632)
    {
      Wait(5); 
      player.LoseInventory(iFrucht);
      Wait(10);
      aMixer.Play();
      Wait(10);
      oMixer.Graphic = 633;
      Wait(90);
      player.Say("Jetzt habe ich rotes Fruchtmus im Mixer.");
    }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iGlas && oMixer.Graphic == 633)
    {
      Wait(5); 
      player.LoseInventory(iGlas);
      Wait(10);
      aSound4.Play();
      oMixer.Graphic = 632;
      player.AddInventory(iGlasVoll);
      Wait(5);
      player.Say("Ich habe das Fruchtmus in das Glas getan.");
    }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iKondome && oMixer.Graphic == 633)
    {
      Wait(5);
      player.Say("Lieber nicht.");
      player.Say("Die Kondome könnten an die Klingen geraten und Löcher bekommen.");
    }
    else if (UsedAction(eActUseInventory) && (oMixer.Graphic == 633 || oMixer.Graphic == 817))
    {
      player.Say("Da ist schon was Gemixtes drin.");
    }
    

    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iSitzkissenL )
    {
      Wait(5); 
      player.LoseInventory(iSitzkissenL);
      Wait(10);
      aMixer.Play();
      Wait(10);
      oMixer.Graphic = 817;
      Wait(90);
      player.Say("Ich habe das Sitzpolster zerhäckselt.");
    }
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iSitzkissenR )
    {
      Wait(5); 
      player.LoseInventory(iSitzkissenR);
      Wait(10);
      aMixer.Play();
      Wait(10);
      oMixer.Graphic = 817;
      Wait(90);
      player.Say("Ich habe das Sitzpolster zerhäckselt.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Das möchte ich nicht klein häckseln.");
    }
    else Unhandled();
  }
}

function oSexy_AnyClick()
{
  if (any_click_move(190, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Meine Corsage.");
		}
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.AddInventory(iHoseSexy);
      oSexy.Visible = false;
      hose_da=false;
      PlaySound(4);
    }
    else Unhandled();
  }
}
