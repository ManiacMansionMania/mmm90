// Bernards Zimmer

/****************************
*   Raum-Funktionen
****************************/

bool firstbla = true;
bool first = true;

function room_Load()
{
  if(player.PreviousRoom == 10)
  {
    DisableInterface();
    StartCutscene(eSkipESCOnly); 
    player.ChangeView(105);
  }
  else
  {
  Door[eTuerBernardsZimmer].Init(oTuer01, hTuer01);
  oComputer.SetView(57, 0, 0);
  oComputer.Animate(0, 9, eRepeat, eNoBlock);
  oPerpetuumMobile.SetView(56, 0, 0);
  oPerpetuumMobile.Animate(0, 7, eRepeat, eNoBlock);
  cBernard.FaceDirection(eDirectionLeft);
  player.FaceDirection(eDirectionRight);
  
  StopMusic();
  PlayMusic(16);
  }
  
  
  oEierkopf.Visible = IsTranslationAvailable();
}

function room_AfterFadeIn()
{
  if(player.PreviousRoom == 10)
  { 
    aGabba.Play(eAudioPriorityNormal, eRepeat);
    Wait(50);
    cBernard.Say("Oh mein Gott.");
    cBernard.Say("Was ist denn das für ein Krach?");
    cBernard.Say("So kann ich mich doch gar nicht konzentrieren!");
    Wait(30);
    aGabba.Stop();
    EndCutscene();
    EnableInterface();
    player.ChangeRoom(10);
    player.ChangeView(35);  
  }
  else if(cBernard.Room == 5)
  {
     gAction.Visible = false;
     gMaingui.Visible = false;  
     gBorder.Visible = false;
    if(first)
    {
    dStreit.Start();
    first=false;
    }
    else
    {
      cBernard.Say("Ich habe doch gesagt, dass ich in Ruhe lernen will.");
      cBernard.Say("Also, RAUS!");
    }
    player.ChangeRoom(player.PreviousRoom, 271, 133);
  }
  else if(firstbla)
  {
    player.Say("Da konnte Klein-Bernardinchen wohl nicht lernen...");
    player.Say("...und hat sich in die Bib verkrochen.");
    player.FaceDirection(eDirectionDown);
    player.Say("Hehehe.");
    firstbla=false;
  }
}

function room_Leave()
{
  StopMusic();
  PlayMusic(13);
}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBernardsZimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hDiplom_AnyClick()
{
  if (any_click_move(175, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Gewinner des Eierkopfpreises.'");
      Wait (10);
      player.FaceDirection(eDirectionDown);
      player.Say("Das passt zu meinem Bruder.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich mit so einem Müll?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Nein danke.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich kann es nicht öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ich kann es nicht schliessen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
    else if (UsedAction(eActUseInventory) && (player.ActiveInventory==iSaeure || player.ActiveInventory==iNagellack))
		{
			Wait(5);
			player.Say("Das würde den Preis schon gut zerstören.");
      player.Say("Nur der Eierkopf braucht halt einen Eierkopfpreis.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das nützt nicht gegen den Eierkopf.");
		}
		else Unhandled();
  }
}

function hBuecher_AnyClick()
{
  if (any_click_move(220, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Jede Menge unverständlicher Schund.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich mit so einem Müll?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Was soll ich mit so einem Müll?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Wie? Bücher kann man öffnen?");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die sind schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann man nicht mit den Büchern benutzen.");
		}
		else Unhandled();
  }
}

function hChuck_AnyClick()
{
  if (any_click_move(75, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich wusste gar nicht, dass Bernard einen grünen Daumen hat.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich vergreife mich nicht an wehrlosen Pflanzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Die Pflanze braucht das nicht wirklich.");
		}
		else Unhandled();
  }
}

function hBett_AnyClick()
{
  if (any_click_move(220, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das Bett von Bernard.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Da lege ich mich bestimmt nicht rein!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein, danke!");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iPolster)
		{
			Wait(5);
      if(iPolster.Graphic == 819)
      {
        player.Say("Gute Idee! Ich brauche aber noch mehr davon.");
      }
      else
      {
        player.LoseInventory(iPolster);
        oPolster.Visible=true;
        PlaySound(4);
        Wait(15);
        player.FaceDirection(eDirectionDown);
        player.Say("Bernard, ich wünsche dir einen geruhsamen Schlaf.");
        player.Say("Und viel Spaß mit deiner Polsterallergie.");
      }

		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich noch anderswo gebrauchen.");
		}
		else Unhandled();
  }
}

function hFenster01_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann das Haus von dem fetten Hoagie sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory==iLukenoeffner)
		{
			Wait(5);
			player.Say("Der Lukenöffner passt nicht ins Fenster.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (any_click_move(275, 130, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Aussicht. Das einzig Gute in diesem Zimmer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein, das klemmt bestimmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory==iLukenoeffner)
		{
			Wait(5);
			player.Say("Der Lukenöffner passt nicht ins Fenster.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

function hSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oComputer_AnyClick()
{
  if (any_click_move(90, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Bernards Computer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist doch kein Laptop.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da blinkt nur so ein grüner Strich.");
      player.Say("Laaaaaaangweilig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist irgendwie schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory) && player.ActiveInventory == iFernbedienung)
		{
			Wait(5);
			player.Say("Die funktioniert nur mit dem Fernseher.");
		}
    else if (UsedAction(eActUseInventory) && (player.ActiveInventory == iLukenoeffner || player.ActiveInventory == iBowling || player.ActiveInventory == iSaeure))
		{
			Wait(5);
      player.FaceDirection(eDirectionDown);
			player.Say("Gute Idee.");
      player.Say("Leider würden mir die Eltern bestimmt Dateverbot für das Zerstören des Computers aufzwängen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function oSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist jede Menge Schrott drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Igitt! Ich fasse dieses Nerd-Zeugs bestimmt nicht an!");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Igitt! Ich fasse dieses Nerd-Zeugs bestimmt nicht an!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reißen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Wenn ich das da rein tue wird das bestimmt kontaminiert!");
		}
		else Unhandled();
  }
}

function oSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist jede Menge Schrott drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Igitt! Ich fasse dieses Nerd-Zeugs bestimmt nicht an!");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Igitt! Ich fasse dieses Nerd-Zeugs bestimmt nicht an!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reißen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Wenn ich das da rein tue wird das bestimmt kontaminiert!");
		}
		else Unhandled();
  }
}

function oPerpetuumMobile_AnyClick()
{
  if (any_click_move(175, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht aus wie ein Hamsterrad...");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("...nur ohne Hamster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich hab keine Ahnung wozu man das brauchen sollte.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Warum sollte ich es anhalten?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht zu so einem komischen Ding.");
		}
		else Unhandled();
  }
}

function oKissen_AnyClick()
{
  if (any_click_move(240, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Daunenkissen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oKissen.Visible = false;
      Wait(5);
      aSound4.Play();
      Wait(5);
      player.AddInventory(iKissen);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte nicht in Bernards Bett schlafen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht zu dem Kissen.");
		}
		else Unhandled();
  }
}

function oPolster_AnyClick()
{
  if(any_click_move(197, 133, eDirectionUp))
  {
    Wait(5);
    if(UsedAction(eActLookAt))
    {
      player.Say("Wer hat denn da Bernards Bett so eingesaut?");
      player.Say("Hehe.");
    }
    else if(UsedAction(eActPickUp))
    {
      player.Say("Nein. Das bleibt jetzt da.");
    }
    else if(UsedAction(eActUseInventory))
    {
      player.Say("Nein. Das bleibt jetzt so.");
    }
    else Unhandled();
  }
}
