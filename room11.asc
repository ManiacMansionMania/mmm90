// Flur im Erdgeschoss

/****************************
*   Raum-Funktionen
****************************/
bool kammer_offen = false;
bool schluessel_da = false;
bool schluessel_drin = true;
bool kuli_da = true;
bool first_offen = true;

function room_Load()
{
  Door[eTuerWohnzimmer].Init(oTuer01, hTuer01);
  Door[eTuerKueche].Init(oTuer02, hTuer02);
  Door[eTuerKammer].Init(oTuer03, hTuer03);
}

function room_AfterFadeIn()
{
  if(bTreppe)
  {
    player.Walk(160, 105, eBlock, eWalkableAreas);
    player.FaceDirection(eDirectionDown);
    bTreppe = false;
  }
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerWohnzimmer].Click()==0) Unhandled();
}

function hTuer02_AnyClick()
{
  if(Door[eTuerKueche].Click()==0) Unhandled();
}

function hTuer03_AnyClick()
{
  if(kammer_offen)
  { 
    if(first_offen && UsedAction(eActOpen))
    {
      if(Door[eTuerKammer].Click()==0) Unhandled();
      first_offen = false;
      player.Say("Huch!");
      player.Walk(63, 132, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionRight);
      cGreen.ChangeRoom(11, 87, 131, eDirectionLeft);
      cGreen.Say("Tschuldigung.");
      cGreen.Walk( 289, 136, eBlock, eWalkableAreas);
      Wait(10);
      if(Door[eTuerWohnzimmer].i_GlobalInt == 0)
      {
        Door[eTuerWohnzimmer].i_GlobalInt = 1;
        PlaySound(2);
        oTuer01.Visible=true;
      }
      cGreen.ChangeRoom(1, 1, 1, eDirectionDown);
      player.Say("Ist mir doch jetzt egal...");
      player.Say("Ich habe Urlaub!");
    }
    else if(Door[eTuerKammer].Click()==0) Unhandled();
  }
  else
  {
    if (any_click_move(80, 129, eDirectionRight))
    {
        if(UsedAction(eActWalkTo))
        {}
        else if(UsedAction(eActLookAt) || UsedAction(eActOpen))
        {
           Wait(5);
           player.Say("Die Tür ist abgeschlossen.");    
        }
        else if(UsedAction(eActUseInventory))
        {
          Wait(5);
          if(player.ActiveInventory == iZettel)
          {
            oZettel.Visible = true;
            player.LoseInventory(iZettel);
            PlaySound(4);
          }
          else if(player.ActiveInventory == iSchluessel2)
          {
            kammer_offen = true;
            aSchloss.Play();
          }
          else if(player.ActiveInventory == iMine && oZettel.Visible == true)
          {      
              player.Say("Ich muss das ins Schlüsselloch tun.");
         
          }
          else
          {
            player.Say("Ich kann damit die Tür nicht aufbrechen.");
          }
          
        }
        else Unhandled();
     }
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hObergeschoss_AnyClick()
{
  if (any_click_move(160, 105, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
      player.Walk(270, 70, eBlock, eWalkableAreas);
      Wait(10);
			player.ChangeRoom(6, 190, 120);
      player.FaceDirection(eDirectionRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach oben.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Walk(270, 70, eBlock, eWalkableAreas);
      Wait(10);
			player.ChangeRoom(6, 190, 120);
      player.FaceDirection(eDirectionRight);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es geht nicht auf.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es geht nicht zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}




function hBild_AnyClick()
{
  if (any_click_move(167, 103, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Immer wenn ich dieses Bild anschaue, hab ich das Gefühl, zu viel getrunken zu haben...");
       player.FaceDirection(eDirectionDown);
       player.Say("... ich sehe den Kopf dreifach.");
    }
    else if(UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Ich will keine Freaks aus Bernards Computerspielen mit mir rumschleppen!");
    }
    else Unhandled();
    
  }
  
}

function hKommodeL_AnyClick()
{
  if (any_click_move(236, 127, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Die Telefonkommode.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      aSound85.Play();
      oKommL.Visible = true;
      hKommodeL.Enabled = false;
      oTBook.Visible = true;
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die ist schon geschlossen.");
    }
    else Unhandled();
    
  }
}

function hKommodeR_AnyClick()
{
  if (any_click_move(236, 127, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Die Telefonkommode.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      aSound85.Play();
      oKommR.Visible = true;
      hKommodeR.Enabled = false;
      if(kuli_da)
      {
        oKuli.Visible = true;
      }
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die ist schon geschlossen.");
    }
    else Unhandled();
    
  }
}

function oKommL_AnyClick()
{
  if (any_click_move(236, 127, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Die linke Kommodentür ist offen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      aSound85.Play();
      oKommL.Visible = false;
      hKommodeL.Enabled = true;
      oTBook.Visible = false;
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Die ist schon offen.");
    }
    else Unhandled();
    
  }
}

function oKommR_AnyClick()
{
  if (any_click_move(236, 127, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Die rechte Kommodentür ist offen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      aSound85.Play();
      oKommR.Visible = false;
      hKommodeR.Enabled = true;
      oKuli.Visible = false;
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Die ist schon offen.");
    }
    else Unhandled();
    
  }
}

function oTelefon_AnyClick()
{
  if (any_click_move(245, 129, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       player.Say("Ein antikes Telefon.");
       Wait(5);
       player.FaceDirection(eDirectionDown);
       Wait(5);
       player.Say("Mit WÄHLSCHEIBE!");
    }
    else if(UsedAction(eActPickUp)||UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Ich habe keine Ahnung wie man so etwas uuuuuraltes bedient.");
    }
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Ich habe das Gefühl, dass das anders funktioniert.");
    }
    else Unhandled();
  }
}

function hLoch_AnyClick()
{
  if (any_click_move(80, 129, eDirectionRight))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if(UsedAction(eActLookAt))
    {
       Wait(5);
       if(schluessel_drin)
       {
         player.Say("Innen steckt ein Schlüssel.");
         Wait(5);
         player.FaceDirection(eDirectionDown);
         Wait(5);
         player.Say("Wie kommt denn der da rein?");
       }
       else
        player.Say("Ich habe es nicht nötig, durch Schlüssellöcher zu spannen.");
    }
    
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      if(player.ActiveInventory == iSchluessel2)
      {
        if(kammer_offen)
          kammer_offen = false;
        else
          kammer_offen = true;
        aSchloss.Play();
      }
      else if(player.ActiveInventory == iMine)
      {
        if(schluessel_drin)
        {
            if(oZettel.Visible == true)
          {
            PlaySound(60);
            schluessel_da = true;
            schluessel_drin = false;
          }
          else
          {
            player.Say("Dann wär der Schlüssel weg.");
          }
        }
        else
          player.Say("Da steckt kein Schlüssel mehr.");   
      }
      else if(player.ActiveInventory == iKuli && schluessel_drin == true)
      {
        player.Say("Gute Idee. Leider ist der Kuli zu breit für das Schlüsselloch.");
      }
      else
      {
        player.Say("Das passt nicht ins Schlüsselloch.");
      }
      
    }
    else Unhandled();
  }
}

function oZettel_AnyClick()
{
  if (any_click_move(103, 129, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ich sollte meinen Zettel wieder mitnehmen. Sonst weiß ich gar nicht, was ich noch einpacken muss.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      oZettel.Visible = false;
      player.AddInventory(iZettel);
      PlaySound(4);
      if(schluessel_da)
      {
        player.AddInventory(iSchluessel2);
        schluessel_da = false;
      }
        
    }
    else Unhandled();
  
  }
}

function oKuli_AnyClick()
{
  if (any_click_move(243, 114,  eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Kugelschreiber.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      oKuli.Visible = false;
      player.AddInventory(iKuli);
      PlaySound(4);
      kuli_da = false;       
    }
    else
    {
      Wait(5);
      player.Say("Ich sollte ihn erst aufnehmen.");
    }
  
  }
}

function oTBook_AnyClick()
{
  if (any_click_move(219, 130, eDirectionUp))
	{
    if(UsedAction(eActWalkTo))
    {}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Rote Seiten.");
      player.Say("Dieses Buch enthält alle Nummern von den Leuten, die keinen Eintrag im Telefonbuch wünschten.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Nein danke. Das ist mir zu schwer zum rumschleppen.");
      player.Say("Und es ist auch NICHT lila!");       
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      if(!player.HasInventory(iCD) && cd_drin == false)
      {
        player.Say("Huch. Da hat jemand eine CD in das Buch gelegt."); 
        Wait(10);
        player.AddInventory(iCD);
        PlaySound(4);  
      }
      else
        player.Say("Ich möchte nicht meine Zeit mit dem Lesen von langweiligen Telefonnummern verschwenden!");
    }
    else if(UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Ich möchte nicht meine Zeit mit dem Lesen von langweiligen Telefonnummern verschwenden!");
    }
    else if(UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Das kann ich nicht mit dem Telefonbuch benutzen.");
    }
    else Unhandled();
  
  }
}
